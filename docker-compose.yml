version: '3.8'

services:
    kafka-ui:
        container_name: kafka-ui
        image: provectuslabs/kafka-ui:latest
        ports:
            - "8080:8080"
        depends_on:
            - zookeeper
            - kafka1
        environment:
            KAFKA_CLUSTERS_0_NAME: local
            KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "kafka1:9092,kafka2:9092"
            KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181

    zookeeper:
        image: wurstmeister/zookeeper:3.4.6
        container_name: zookeeper
        ports:
            - '2181:2181'
        expose:
            - "2181"
    kafka1:
        image: wurstmeister/kafka:2.13-2.8.1
        container_name: kafka1
        depends_on:
            - zookeeper
        ports:
            - "9093:9093"
        expose:
            - "9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka1:9092,OUTSIDE://localhost:9093
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_CREATE_TOPICS: "first-topic:2:2,fanout-topic:2:2,new-user:2:2,authorize:2:2,notify:2:2,notified:2:2,dlq:2:2"

    kafka2:
        image: wurstmeister/kafka:2.13-2.8.1
        container_name: kafka2
        depends_on:
            - zookeeper
        ports:
            - "9094:9094"
        expose:
            - "9092"
        environment:
            KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka2:9092,OUTSIDE://localhost:9094
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
            KAFKA_CREATE_TOPICS: "first-topic:2:2,fanout-topic:2:2,new-user:2:2,authorize:2:2,notify:2:2,notified:2:2,dlq:2:2"

    provisioner:
        build:
            context: ./consumer-producer
            dockerfile: ./Dockerfile
        container_name: provisioner
        ports:
            - "8081:8081"
        expose:
            - "8081"
        depends_on:
            kafka1:
                condition: service_healthy
            kafka2:
                condition: service_healthy
        environment:
            PORT: 8081

    authorizer:
        build:
            context: ./consumer-producer
            dockerfile: ./Dockerfile
        container_name: authorizer
        ports:
            - "8082:8082"
        expose:
            - "8082"
        depends_on:
            kafka1:
                condition: service_healthy
            kafka2:
                condition: service_healthy
        environment:
            CONSUMER_TOPICS: authorize
            CONSUMER_GROUP: authorizer-group
            PRODUCER_TOPIC: notify
            PORT: 8082

    notifier:
        build:
            context: ./consumer-producer
            dockerfile: ./Dockerfile
        container_name: notifier
        ports:
            - "8083:8083"
        expose:
            - "8083"
        depends_on:
            kafka1:
                condition: service_healthy
            kafka2:
                condition: service_healthy
        environment:
            CONSUMER_TOPICS: notify
            CONSUMER_GROUP: notifier-group
            PRODUCER_TOPIC: notified
            PORT: 8083

